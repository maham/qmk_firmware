COMB(reLprn,        SE_LPRN,        KC_R, KC_E)
COMB(uiRprn,        SE_RPRN,        KC_U, KC_I)
COMB(weLbrc,        SE_LBRC,        KC_W, KC_E)
COMB(ioRbrc,        SE_RBRC,        KC_I, KC_O)
COMB(wrLess,        SE_SECT,        KC_W, KC_R)
COMB(uoMore,        S(SE_SECT),     KC_U, KC_O)
COMB(werLcbr,       SE_LCBR,        KC_W, KC_E, KC_R)
COMB(uioRcbr,       SE_RCBR,        KC_U, KC_I, KC_O)
COMB(kCommScln,     SE_SCLN,        KC_K, KC_COMM)
COMB(lDotColn,      SE_COLN,        KC_L, KC_DOT)
COMB(dfTab,         KC_TAB,         KC_D, KC_F)
COMB(jmSelect,      OSL(_FUNCTION), KC_J, KC_M)
COMB(vbLower,       OSL(_LOWER),    KC_V, KC_B)
COMB(nmRaise,       OSL(_RAISE),    KC_N, KC_M)
COMB(wsLctl,        OSM(MOD_LCTL),  KC_W, KC_S)
COMB(olRctl,        OSM(MOD_RCTL),  KC_O, KC_L)
COMB(edLalt,        OSM(MOD_LALT),  KC_E, KC_D)
COMB(ikRalt,        OSM(MOD_RALT),  KC_I, KC_K)
COMB(rfLgui,        OSM(MOD_LGUI),  KC_R, KC_F)
COMB(ujRgui,        OSM(MOD_RGUI),  KC_U, KC_J)
COMB(tgLead,        QK_LEAD,        KC_T, KC_G)
COMB(yhLead,        QK_LEAD,        KC_Y, KC_H)
COMB(ikolGuiTab,    G(KC_TAB),      KC_I, KC_K, KC_O, KC_L)
COMB(jkEnt,         KC_ENT,         KC_J, KC_K)
COMB(sdBspc,        KC_BSPC,        KC_S, KC_D)
COMB(sdfEsc,        KC_ESC,         KC_S, KC_D, KC_F)
COMB(qaQuot,        SE_QUOT,        KC_Q, KC_A)
COMB(pOdiaDQuot,    SE_DQUO,        KC_P, SE_ODIA)

SUBS(fghjOdiaSps,   SS_LSFT("0")" ",     KC_F, KC_G, KC_H, KC_J)
SUBS(fjEqEq,        SS_LSFT("10")" ",    KC_F, KC_J)
SUBS(ghEqEq,        SS_LSFT("00")" ",    KC_G, KC_H)
SUBS(fhLeEq,        "`"SS_LSFT("0")" ",  KC_F, KC_H)
SUBS(gjGrEq,        SS_LSFT("`0")" ",    KC_G, KC_J)
SUBS(fhjArrow,      SS_LSFT("0`")" ",    KC_F, KC_H, KC_J)
SUBS(gb_gt,         "gT",                KC_G, KC_B)
SUBS(hn_gT,         "gt",                KC_H, KC_N)

SUBS(GIT,           "git ",     KC_G, KC_I, KC_T)
SUBS(STAtus,        "status ",  KC_S, KC_T, KC_A)
SUBS(STasH,         "stash ",   KC_S, KC_T, KC_H)
SUBS(DIFf,          "diff ",    KC_D, KC_I, KC_F)
SUBS(COMmit,        "commit ",  KC_C, KC_M, KC_O)
SUBS(REbASE,        "rebase ",  KC_A, KC_S, KC_E, KC_R)
SUBS(LOG,           "log ",     KC_L, KC_O, KC_G)

SUBS(FINal,         "final ",                   KC_F, KC_I, KC_N)
SUBS(REQuire,       "required ",                KC_R, KC_E, KC_Q)
SUBS(AWaiT,         "await ",                   KC_A, KC_W, KC_T)
SUBS(ASYnc,         "async ",                   KC_A, KC_S, KC_Y)
SUBS(THIs,          "this.",                    KC_T, KC_H, KC_I)
SUBS(exTENds,       "extends ",                 KC_T, KC_E, KC_N)
SUBS(CLAss,         "class ",                   KC_C, KC_L, KC_A)
SUBS(DEbugPrint,    "debugPrint"SS_LSFT("8"),   KC_D, KC_E, KC_P)
SUBS(IMPort,        "import ",                  KC_I, KC_M, KC_P)

SUBS(FLUtter,       "flutter ",     KC_F, KC_L, KC_U)
SUBS(FLUtterV,      "flutter /v ",  KC_F, KC_L, KC_U, KC_V)
SUBS(DOCtor,        "doctor ",      KC_D, KC_O, KC_C)
SUBS(PUB,           "pub ",         KC_P, KC_U, KC_B)
SUBS(GET,           "get ",         KC_G, KC_E, KC_T)
